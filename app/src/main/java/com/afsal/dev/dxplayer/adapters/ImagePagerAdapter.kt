package com.afsal.dev.dxplayer.adaptersimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.recyclerview.widget.AsyncListDifferimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.RecyclerViewimport com.afsal.dev.dxplayer.databinding.PagerItemBindingimport com.afsal.dev.dxplayer.models.photosSections.ImageModelimport com.afsal.dev.dxplayer.utills.CoreUttilesclass ImagePagerAdapter(private val prev:Int,private var onItemChanged: ((photo:ImageModel) ->Unit)):RecyclerView.Adapter<ImagePagerAdapter.ImageViewHolder>() {   private var prevPosition=prev    private val diffCallback=object :DiffUtil.ItemCallback<ImageModel>(){        override fun areItemsTheSame(oldItem: ImageModel, newItem: ImageModel): Boolean {            return oldItem.id==newItem.id        }        override fun areContentsTheSame(oldItem: ImageModel, newItem: ImageModel): Boolean {          return oldItem==newItem        }    }    val differ=AsyncListDiffer(this,diffCallback)    class ImageViewHolder(val binding: PagerItemBinding):RecyclerView.ViewHolder(binding.root){    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ImageViewHolder {        return ImageViewHolder(PagerItemBinding.inflate(LayoutInflater.from(parent.context),parent,false))    }    override fun onBindViewHolder(holder: ImageViewHolder, position: Int) {        val photo=differ.currentList[position]                   var p=position            var abselutPosition=prev                     if (position > prevPosition){                         abselutPosition  = position-1                     }else if ( position < prevPosition){                         abselutPosition=position+1                     }else if ( position== differ.currentList.size){                         abselutPosition=p                     }                   prevPosition=abselutPosition        onItemChanged(differ.currentList[abselutPosition])        holder.binding.pagerImage.onDrawableLoaded ={holder.binding.progress.visibility= View.GONE }         holder.binding.pagerImage.apply {           //  debugInfoVisible = true           //  swipeToDismissEnabled = true         }        CoreUttiles.loadImageIntoView(photo.contentUri,            null,holder.binding.pagerImage ,CoreUttiles.IMAGE_VIEW_FRAGMENT)    }    override fun getItemCount()=differ.currentList.size}